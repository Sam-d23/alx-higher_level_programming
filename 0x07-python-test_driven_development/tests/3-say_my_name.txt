``3-say_my_name`` module
======================

Uses ``say_my_name``
-------------------

Imports the function from the module:
	>>> say_my_name = __import__("3-say_my_name").say_my_name

Checks for module docstring:
	 >>> m = __import__("3-say_my_name").__doc__
	 >>> len(m) > 1
	 True

Checks for function docstring:
	 >>> f = __import__("3-say_my_name").say_my_name.__doc__
         >>> len(f) > 1
         True

Checks for passing None as first name:
	 >>> say_my_name(None, "Sam")
	 Traceback (most recent call last):
         ...
         TypeError: first_name must be a string

Checks for passing None as last name:
	 >>> say_my_name("Sam", None)
	 Traceback (most recent call last):
         ...
         TypeError: last_name must be a string

Checks for wrong type as first name:
         >>> say_my_name(1, "Sam")
         Traceback (most recent call last):
         ...
         TypeError: first_name must be a string

Checks for wrong type as last name:
         >>> say_my_name("Sam", [4])
         Traceback (most recent call last):
         ...
         TypeError: last_name must be a string

Checks for normal use:
	 >>> say_my_name("Sam", "Joe")
	 My name is Sam Joe
	 >>> say_my_name("Alex", "Kenya")
	 My name is Alex Kenya

Checks for 1 arg:
	 >>> say_my_name("Eugene")
	 My name is Eugene

Checks for more than 2 args:
	 >>> say_my_name("Harry", "Wilfred", "Max")
	 Traceback (most recent call last):
	 ...
	 TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
